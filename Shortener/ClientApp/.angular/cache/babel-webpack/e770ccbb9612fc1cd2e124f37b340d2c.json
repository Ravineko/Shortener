{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Shortener\\\\Shortener\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { AuthenticationResultStatus } from '../authorize.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoginActions, QueryParameterNames, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authorize.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\"; // The main responsibility of this component is to handle the user's login process.\n// This is the starting point for the login process. Any component that needs to authenticate\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\n// let the component perform the login and return back to the return url.\n\nexport class LoginComponent {\n  constructor(authorizeService, activatedRoute, router, formBuilder // Додайте його сюди\n  ) {\n    this.authorizeService = authorizeService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.email = '';\n    this.password = '';\n    this.message = new BehaviorSubject(null);\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const action = _this.activatedRoute.snapshot.url[1];\n\n      switch (action.path) {\n        case LoginActions.Login:\n          yield _this.login(_this.getReturnUrl());\n          break;\n\n        case LoginActions.LoginCallback:\n          yield _this.processLoginCallback();\n          break;\n\n        case LoginActions.LoginFailed:\n          const message = _this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\n\n          _this.message.next(message);\n\n          break;\n\n        case LoginActions.Profile:\n          _this.redirectToProfile();\n\n          break;\n\n        case LoginActions.Register:\n          _this.redirectToRegister();\n\n          break;\n\n        default:\n          throw new Error(`Invalid action '${action}'`);\n      }\n    })();\n  }\n\n  onSubmit() {// Логіка обробки події при відправці форми\n  }\n\n  login(returnUrl) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const state = {\n        returnUrl\n      };\n      const result = yield _this2.authorizeService.signIn(state);\n\n      _this2.message.next(undefined);\n\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          break;\n\n        case AuthenticationResultStatus.Success:\n          yield _this2.navigateToReturnUrl(returnUrl);\n          break;\n\n        case AuthenticationResultStatus.Fail:\n          yield _this2.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\n            queryParams: {\n              [QueryParameterNames.Message]: result.message\n            }\n          });\n          break;\n\n        default:\n          throw new Error(`Invalid status result ${result.status}.`);\n      }\n    })();\n  }\n\n  processLoginCallback() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const url = window.location.href;\n      const result = yield _this3.authorizeService.completeSignIn(url);\n\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          // There should not be any redirects as completeSignIn never redirects.\n          throw new Error('Should not redirect.');\n\n        case AuthenticationResultStatus.Success:\n          yield _this3.navigateToReturnUrl(_this3.getReturnUrl(result.state));\n          break;\n\n        case AuthenticationResultStatus.Fail:\n          _this3.message.next(result.message);\n\n          break;\n      }\n    })();\n  }\n\n  redirectToRegister() {\n    this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?returnUrl=${encodeURI('/' + ApplicationPaths.Login)}`);\n  }\n\n  redirectToProfile() {\n    this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\n  }\n\n  navigateToReturnUrl(returnUrl) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      // It's important that we do a replace here so that we remove the callback uri with the\n      // fragment containing the tokens from the browser history.\n      yield _this4.router.navigateByUrl(returnUrl, {\n        replaceUrl: true\n      });\n    })();\n  }\n\n  getReturnUrl(state) {\n    const fromQuery = this.activatedRoute.snapshot.queryParams.returnUrl; // If the url is coming from the query string, check that is either\n    // a relative url or an absolute url\n\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n\n    return state && state.returnUrl || fromQuery || ApplicationPaths.DefaultLoginRedirectPath;\n  }\n\n  redirectToApiAuthorizationPath(apiAuthorizationPath) {\n    // It's important that we do a replace here so that when the user hits the back arrow on the\n    // browser they get sent back to where it was on the app instead of to an endpoint on this\n    // component.\n    const redirectUrl = `${window.location.origin}/${apiAuthorizationPath}`;\n    window.location.replace(redirectUrl);\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthorizeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"login-container\"], [1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h2\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n  max-width: 400px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.loginr-form[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 8px;\\r\\n  margin-bottom: 16px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n  background-color: #4caf50;\\r\\n  color: white;\\r\\n  padding: 10px 15px;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #45a049;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkOztBQUVBLHVCQUF1Qjs7QUFDdkI7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUUsMEJBQTBCOztBQUM1QjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUUsMEJBQTBCOztBQUM1QjtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHNCQUFzQjtBQUN4Qjs7QUFFRSxnQ0FBZ0M7O0FBQ2xDO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUkseUNBQXlDOztBQUMzQztJQUNFLHlCQUF5QjtFQUMzQiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi8qIFN0eWxlIGZvciB0aGUgZm9ybSAqL1xyXG4ubG9naW5yLWZvcm0ge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbiAgLyogU3R5bGUgZm9yIGZvcm0gbGFiZWxzICovXHJcbi5sb2dpbi1mb3JtIGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuXHJcbiAgLyogU3R5bGUgZm9yIGZvcm0gaW5wdXRzICovXHJcbi5sb2dpbi1mb3JtIGlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4gIC8qIFN0eWxlIGZvciB0aGUgc3VibWl0IGJ1dHRvbiAqL1xyXG4ubG9naW4tZm9ybSBidXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4gICAgLyogU3R5bGUgZm9yIHRoZSBzdWJtaXQgYnV0dG9uIG9uIGhvdmVyICovXHJcbiAgLmxvZ2luLWZvcm0gYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbiAgfVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["D:/Shortener/Shortener/ClientApp/src/api-authorization/login/login.component.ts"],"names":["AuthenticationResultStatus","BehaviorSubject","LoginActions","QueryParameterNames","ApplicationPaths","ReturnUrlType","Validators","i0","i1","i2","i3","LoginComponent","constructor","authorizeService","activatedRoute","router","formBuilder","email","password","message","loginForm","group","required","ngOnInit","action","snapshot","url","path","Login","login","getReturnUrl","LoginCallback","processLoginCallback","LoginFailed","queryParamMap","get","Message","next","Profile","redirectToProfile","Register","redirectToRegister","Error","onSubmit","returnUrl","state","result","signIn","undefined","status","Redirect","Success","navigateToReturnUrl","Fail","navigate","LoginFailedPathComponents","queryParams","window","location","href","completeSignIn","redirectToApiAuthorizationPath","IdentityRegisterPath","encodeURI","IdentityManagePath","navigateByUrl","replaceUrl","fromQuery","startsWith","origin","test","DefaultLoginRedirectPath","apiAuthorizationPath","redirectUrl","replace","ɵfac","LoginComponent_Factory","t","ɵɵdirectiveInject","AuthorizeService","ActivatedRoute","Router","FormBuilder","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","RequiredValidator","styles"],"mappings":"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","sourcesContent":["import { AuthenticationResultStatus } from '../authorize.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\nimport { Validators } from '@angular/forms';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../authorize.service\";\r\nimport * as i2 from \"@angular/router\";\r\nimport * as i3 from \"@angular/forms\";\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nexport class LoginComponent {\r\n    constructor(authorizeService, activatedRoute, router, formBuilder // Додайте його сюди\r\n    ) {\r\n        this.authorizeService = authorizeService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.router = router;\r\n        this.formBuilder = formBuilder;\r\n        this.email = '';\r\n        this.password = '';\r\n        this.message = new BehaviorSubject(null);\r\n        this.loginForm = this.formBuilder.group({\r\n            email: ['', [Validators.required, Validators.email]],\r\n            password: ['', Validators.required],\r\n        });\r\n    }\r\n    async ngOnInit() {\r\n        const action = this.activatedRoute.snapshot.url[1];\r\n        switch (action.path) {\r\n            case LoginActions.Login:\r\n                await this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                await this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const message = this.activatedRoute.snapshot.queryParamMap.get(QueryParameterNames.Message);\r\n                this.message.next(message);\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n    onSubmit() {\r\n        // Логіка обробки події при відправці форми\r\n    }\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await this.authorizeService.signIn(state);\r\n        this.message.next(undefined);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                await this.router.navigate(ApplicationPaths.LoginFailedPathComponents, {\r\n                    queryParams: { [QueryParameterNames.Message]: result.message }\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await this.authorizeService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as completeSignIn never redirects.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.message.next(result.message);\r\n                break;\r\n        }\r\n    }\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?returnUrl=${encodeURI('/' + ApplicationPaths.Login)}`);\r\n    }\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n    async navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        await this.router.navigateByUrl(returnUrl, {\r\n            replaceUrl: true\r\n        });\r\n    }\r\n    getReturnUrl(state) {\r\n        const fromQuery = this.activatedRoute.snapshot.queryParams.returnUrl;\r\n        // If the url is coming from the query string, check that is either\r\n        // a relative url or an absolute url\r\n        if (fromQuery &&\r\n            !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n                /\\/[^\\/].*/.test(fromQuery))) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            ApplicationPaths.DefaultLoginRedirectPath;\r\n    }\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser they get sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        const redirectUrl = `${window.location.origin}/${apiAuthorizationPath}`;\r\n        window.location.replace(redirectUrl);\r\n    }\r\n}\r\nLoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthorizeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder)); };\r\nLoginComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LoginComponent, selectors: [[\"app-login\"]], decls: 12, vars: 1, consts: [[1, \"login-container\"], [1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0);\r\n        i0.ɵɵelementStart(1, \"h2\");\r\n        i0.ɵɵtext(2, \"Login\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(3, \"form\", 1);\r\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() { return ctx.onSubmit(); });\r\n        i0.ɵɵelementStart(4, \"label\");\r\n        i0.ɵɵtext(5, \"Email:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(6, \"input\", 2);\r\n        i0.ɵɵelementStart(7, \"label\");\r\n        i0.ɵɵtext(8, \"Password:\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(9, \"input\", 3);\r\n        i0.ɵɵelementStart(10, \"button\", 4);\r\n        i0.ɵɵtext(11, \"Login\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\r\n    } }, directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator], styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n  max-width: 400px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.loginr-form[_ngcontent-%COMP%] {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-bottom: 8px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 8px;\\r\\n  margin-bottom: 16px;\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n  background-color: #4caf50;\\r\\n  color: white;\\r\\n  padding: 10px 15px;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #45a049;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkOztBQUVBLHVCQUF1Qjs7QUFDdkI7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUUsMEJBQTBCOztBQUM1QjtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUUsMEJBQTBCOztBQUM1QjtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLHNCQUFzQjtBQUN4Qjs7QUFFRSxnQ0FBZ0M7O0FBQ2xDO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUkseUNBQXlDOztBQUMzQztJQUNFLHlCQUF5QjtFQUMzQiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi8qIFN0eWxlIGZvciB0aGUgZm9ybSAqL1xyXG4ubG9naW5yLWZvcm0ge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbiAgLyogU3R5bGUgZm9yIGZvcm0gbGFiZWxzICovXHJcbi5sb2dpbi1mb3JtIGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbn1cclxuXHJcbiAgLyogU3R5bGUgZm9yIGZvcm0gaW5wdXRzICovXHJcbi5sb2dpbi1mb3JtIGlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG4gIC8qIFN0eWxlIGZvciB0aGUgc3VibWl0IGJ1dHRvbiAqL1xyXG4ubG9naW4tZm9ybSBidXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4gICAgLyogU3R5bGUgZm9yIHRoZSBzdWJtaXQgYnV0dG9uIG9uIGhvdmVyICovXHJcbiAgLmxvZ2luLWZvcm0gYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbiAgfVxyXG4iXX0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}